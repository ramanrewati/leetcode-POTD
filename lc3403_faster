class Solution {
public:
    string answerString(string word, int numFriends) {
        if(numFriends==1) return word;
        const string s = lastSubstring(word);
        const size_t window = word.size() - (numFriends-1) ;
        return s.substr(0,min(s.size(),window));
    }
    string lastSubstring(string s) {
        int i = 0 , j = 1 , k = 0 , n = s.size() ; //k is offset to counter duplicates
        while(j+k<n) {
            //same characters, increase duplicate counter
            if(s[i+k]==s[j+k])
                k++;
            //found a larger character, set i there as it will give lexicographically large string
            else if(s[i+k]<s[j+k])
                i = max(i+k+1,j) , j = i+1 , k=0 ;
            //increment j
            else 
                j = j + k + 1 , k = 0;
        }
        return s.substr(i);
    }
};